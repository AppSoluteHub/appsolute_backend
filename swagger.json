{
  "swagger": "2.0",
  "info": {
    "title": "AppSolute's API",
    "version": "1.0.0"
  },
  "tags": [
    { "name": "user", "description": "User related endpoints" },
    { "name": "auth", "description": "Authentication related endpoints" },
    { "name": "leaderboard", "description": "Leaderboard  related endpoints" },
    { "name": "content", "description": "Content  related endpoints" }
    
 
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer <token>**"
    }
  },
  "paths": {
    "/api/v1/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["user"],
        "description": "Retrieve a list of users",
        "responses": {
          "200": { "description": "List of users" }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": ["user"],
        "description": "Update an existing user's information",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "userData",
            "in": "body",
            "description": "Updated user data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "role": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "User updated successfully" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["user"],
        "description": "Delete an existing user by ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/v1/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "auth"
        ],
        "description": "Register a new user with email and name",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userData",
            "in": "body",
            "description": "User data including email and name",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john@example.com"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "dateOfBirth": {
                  "type": "string",
                  "example": "21-10-2000"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "email",
                "name",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
   "/api/v1/users/login": {
  "post": {
    "summary": "Login a user",
    "tags": ["auth"],
    "description": "Authenticate a user using their email and password.",
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "parameters": [
      {
        "name": "userData",
        "in": "body",
        "description": "User credentials including email and password",
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "john@example.com"
            },
            "password": {
              "type": "string",
              "example": "password123"
            }
          },
          "required": ["email", "password"]
        }
      }
    ],
    "responses": {
      "200": {
        "description": "User logged in successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "JWT access token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                  "type": "object",
                  "description": "Authenticated user details",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john@example.com"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid input provided",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid email or password"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized - Incorrect email or password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized access"
                }
              }
            }
          }
        }
      }
    }
  }
}
,
    "/auth/logout": {
      "post": {
        "summary": "Logout a user",
        "tags": [
          "auth"
        ],
        "description": "Logout a user from the system",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Forgot password",
        "tags": [
          "auth"
        ],
        "description": "Send a password reset link to the user's email",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email address of the user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john@example.com",
                  "required": true,
                  "description": "Email address of the user"
                }
              }
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset link sent successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "tags": [
          "auth"
        ],
        "description": "Reset the user's password with a new one",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resetData",
            "in": "body",
            "description": "Reset data including email, token and new password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": [
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },


 
  "/api/v1/posts": {
    "post": {
      "summary": "Create a new blog post",
      "tags": ["Posts"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": { "type": "string" },
                "description": { "type": "string" },
                "imageUrl": { "type": "string" },
                "categories": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "tags": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "contributors": {
                  "type": "array",
                  "items": { "type": "string", "format": "email" }
                },
                "isPublished": { "type": "boolean" }
              },
              "required": ["title", "description"]
            },
            "example": {
              "title": "The Art & Science of Design",
              "description": "Design is more than just aesthetics...",
              "imageUrl": "https://example.com/image.jpg",
              "categories": ["tech", "database"],
              "tags": ["prisma", "orm", "nodejs"],
              "contributors": ["alice@example.com", "bob@example.com"],
              "isPublished": true
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Post created successfully"
        }
      }
    },
    "get": {
      "summary": "Get all posts",
      "tags": ["Posts"],
      "responses": {
        "200": {
          "description": "A list of posts"
        }
      }
    }
  },

  "/api/v1/posts/{postId}": {
    "get": {
      "summary": "Get a single post by ID",
      "tags": ["Posts"],
      "parameters": [
        {
          "name": "postId",
          "in": "path",
          "required": true,
          "schema": { "type": "string" },
          "example": "65b2a3df29fa0e001f586011"
        }
      ],
      "responses": {
        "200": {
          "description": "Post found"
        },
        "404": {
          "description": "Post not found"
        }
      }
    },
    "delete": {
      "summary": "Delete a post by ID",
      "tags": ["Posts"],
      "parameters": [
        {
          "name": "postId",
          "in": "path",
          "required": true,
          "schema": { "type": "string" },
          "example": "65b2a3df29fa0e001f586011"
        }
      ],
      "responses": {
        "200": {
          "description": "Post deleted successfully"
        },
        "404": {
          "description": "Post not found"
        }
      }
    },
    "patch": {
      "summary": "Update a post by ID",
      "tags": ["Posts"],
      "parameters": [
        {
          "name": "postId",
          "in": "path",
          "required": true,
          "schema": { "type": "string" },
          "example": "65b2a3df29fa0e001f586011"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": { "type": "string" },
                "description": { "type": "string" },
                "imageUrl": { "type": "string" },
                "categories": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "tags": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "contributors": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "isPublished": { "type": "boolean" }
              }
            },
            "example": {
              "title": "Updated Post Title",
              "description": "Updated post description",
              "imageUrl": "https://example.com/updated.jpg",
              "categories": ["design"],
              "tags": ["ux", "ui"],
              "contributors": ["new@example.com"],
              "isPublished": false
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Post updated successfully"
        },
        "404": {
          "description": "Post not found"
        }
      }
    }
  }




       
  }
}
